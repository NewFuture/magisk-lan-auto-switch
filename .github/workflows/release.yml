name: Build and Release Magisk Module

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up zip
        run: sudo apt-get install zip

      - name: Create META-INF files
        run: |
          mkdir -p META-INF/com/google/android
          echo "#MAGISK" > META-INF/com/google/android/updater-script
          wget https://raw.githubusercontent.com/topjohnwu/Magisk/refs/heads/master/scripts/module_installer.sh -O META-INF/com/google/android/update-binary
          chmod +x META-INF/com/google/android/update-binary

      - name: Package Magisk Module
        run: zip -r9 magisk-lan-auto-switch.zip ./ -x ".github/*" ".git/*"

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: magisk-lan-auto-switch
          path: magisk-lan-auto-switch.zip

      - name: Extract version from module.prop
        id: get_version
        run: |
          VERSION=$(grep '^version=' module.prop | cut -d'=' -f2)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Check if version has changed
        id: check_version
        run: |
          git fetch --tags
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "")
          if [ -z "$LATEST_TAG" ]; then
            echo "No previous tag found. Proceeding with release."
            echo "VERSION_CHANGED=true" >> $GITHUB_ENV
          else
            PREVIOUS_VERSION=${LATEST_TAG#v}
            if [ "$PREVIOUS_VERSION" != "$VERSION" ]; then
              echo "Version has changed from $PREVIOUS_VERSION to $VERSION. Proceeding with release."
              echo "VERSION_CHANGED=true" >> $GITHUB_ENV
            else
              echo "Version has not changed. Skipping release."
              echo "VERSION_CHANGED=false" >> $GITHUB_ENV
            fi
          fi

  release:
    needs: build
    runs-on: ubuntu-latest
    if: env.VERSION_CHANGED == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: magisk-lan-auto-switch
          path: .

      - name: Create Tag
        id: create_tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v${{ env.VERSION }}" -m "Release v${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ env.VERSION }}"
          name: Release v${{ env.VERSION }}
          generate_release_notes: true
          append_body: true
          files: magisk-lan-auto-switch.zip
