name: Build and Release Magisk Module

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check_version.outputs.version_changed }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Package Magisk Modules
        run: |
          for dir in magisk*/; do
            if [ -d "$dir" ]; then
              MODULE_NAME=$(basename "$dir")
              VERSION=$(grep '^version=' "$dir/module.prop" | cut -d'=' -f2)
              ZIP_NAME="${MODULE_NAME}-${VERSION}.zip"
              cd "$dir"
                mkdir -p META-INF/com/google/android
                echo "#MAGISK" > META-INF/com/google/android/updater-script
                wget https://raw.githubusercontent.com/topjohnwu/Magisk/refs/heads/master/scripts/module_installer.sh -O META-INF/com/google/android/update-binary
                chmod +x META-INF/com/google/android/update-binary
                zip -r9 "../$ZIP_NAME" . -x "README.md"
              cd ..
              echo "Packaged $ZIP_NAME"
            fi
          done

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: magisk-modules
          path: "*.zip"

# release:
#   needs: build
#   runs-on: ubuntu-latest
#   if: needs.build.outputs.version_changed == 'true'
#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Download Build Artifact
#       uses: actions/download-artifact@v4
#       with:
#         name: magisk-modules
#         path: .
#
# - name: Create Tag
#   id: create_tag
#   run: |
#     git config user.name "github-actions[bot]"
#     git config user.email "github-actions[bot]@users.noreply.github.com"
#     git tag -a "v${{ needs.build.outputs.version }}" -m "Release v${{ needs.build.outputs.version }}"
#     git push origin "v${{ needs.build.outputs.version }}"
# 
# - name: Create Release
#   id: create_release
#   uses: softprops/action-gh-release@v2
#   with:
#     tag_name: "v${{ needs.build.outputs.version }}"
#     name: "Release v${{ needs.build.outputs.version }}"
#     generate_release_notes: true
#     append_body: true
#     files: "*.zip"

  upload_artifacts:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/') # 仅在推送 tag 时触发
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: magisk-modules
          path: .

      - name: Get Release ID
        id: get_release
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          RELEASE_ID=$(gh api repos/${{ github.repository }}/releases | jq -r ".[] | select(.tag_name==\"$TAG_NAME\") | .id")
          if [ -z "$RELEASE_ID" ]; then
            echo "No release found for tag $TAG_NAME"
            exit 1
          fi
          echo "RELEASE_ID=$RELEASE_ID" >> $GITHUB_ENV

      - name: Upload Artifacts to Release
        run: |
          for file in *.zip; do
            gh release upload $TAG_NAME "$file" --repo ${{ github.repository }} --clobber
          done
